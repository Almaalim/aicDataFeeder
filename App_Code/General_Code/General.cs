using System;
using System.Data;
using System.Collections;
using System.Configuration;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Globalization;
using System.Threading;
using System.Diagnostics;
using System.Security.Cryptography;
using System.Text;
using System.IO;


using System.Web.Profile;

public class General
{
    DBFun DBCs = new DBFun();
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string WSUser = "admin";
    public static string WSPass = "admin";
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    private static string secretWord = "YT*^(IUH(O*TG*&)(*&G^^*BY(&*Y)(*UHIUO*&GB(*&(*&^";
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string ConnString { get { return ConfigurationManager.ConnectionStrings["constring"].ConnectionString; } }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string UrlWSCardPrintTools { get { return ConfigurationManager.AppSettings["Url.WSCardPrintTools"].ToString(); } }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string MD5(string Password)
    {
        Password += General.secretWord;

        byte[] textBytes = System.Text.Encoding.Default.GetBytes(Password);
        try
        {
            MD5CryptoServiceProvider cryptHandler;
            cryptHandler = new MD5CryptoServiceProvider();
            byte[] hash = cryptHandler.ComputeHash(textBytes);
            string ret = "";
            foreach (byte a in hash)
            {
                if (a < 16)
                    ret += "0" + a.ToString("x");
                else
                    ret += a.ToString("x");
            }
            return ret;
        }
        catch
        {
            throw;
        }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static bool IsNullOrEmpty(object obj)
    {
        if (obj == null) { return true; }
        if (string.IsNullOrEmpty(obj.ToString())) { return true; }
        return false;
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string getAlign(int part)
    {
        if (HttpContext.Current.Session["Language"] == null)
        {
            if (part == 1) { return "right"; }
            if (part == 2) { return "left"; }
        }
        else if (HttpContext.Current.Session["Language"].ToString() == "Ar")
        {
            if (part == 1) { return "left"; }
            if (part == 2) { return "right"; }
        }
        else
        {
            if (part == 1) { return "right"; }
            if (part == 2) { return "left"; }
        }

        return ""; 
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string Msg(string pMsgEn, string pMsgAr) { if (HttpContext.Current.Session["Language"].ToString() == "Ar") {  return pMsgAr; } else { return pMsgEn; }  }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string Lang() { if (HttpContext.Current.Session["Language"].ToString() == "Ar") {  return "Ar"; } else { return "En"; }  }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string GrdDisplayDuration(object pDuration)
    {
        try
        {
            if (pDuration == DBNull.Value) { return "00:00:00"; }
            if (string.IsNullOrEmpty(pDuration.ToString())) { return "00:00:00"; }

            TimeSpan tsGen = TimeSpan.FromSeconds(Convert.ToDouble(pDuration));
            int Hours = tsGen.Hours;
            if (tsGen.Days > 0) { Hours = (tsGen.Days * 24) + tsGen.Hours; }
            return Hours.ToString("00") + ":" + tsGen.Minutes.ToString("00") + ":" + tsGen.Seconds.ToString("00");
        }
        catch (Exception ex)
        {
            //ErrorSignal.FromCurrentContext().Raise(ex);
            return "00:00:00";
        }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string DisplayCardStatus(object pStatus)
    {
        switch (pStatus.ToString())
        {
            case "0": return Msg("Editable", "قابل للتعديل");
            case "1": return Msg("InProcess", "تحت الإجراء");
            case "2": return Msg("Active", "فعالة");
            case "3": return Msg("inActive", "غير فعالة");
            case "4": return Msg("Cancelled", "ملغاة");
            default: return "";
        }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string DisplayInActiveStatus(object pStatus)
    {
        switch (pStatus.ToString())
        {
            case "0": return Msg("", "");
            case "1": return Msg("Cancelled", "ملغاة");
            case "2": return Msg("rejected", "مرفوضة");
            case "3": return Msg("Expiryed", "منتهية الصلاحية");
            case "4": return Msg("returned", "معادة");
            case "5": return Msg("Missing", "مفقودة");
            default: return "";
        }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string DisplayApprovedStatus(object pStatus)
    {
        switch (pStatus.ToString())
        {
            case "-2": return Msg("rejected", "مرفوضة");
            case "-1": return Msg("rejected", "مرفوضة");
            case "0": return Msg("Wiat", "انتظار");
            case "1": return Msg("Approved", "مقبولة");
            case "2": return Msg("Approved", "مقبولة");
            default: return "";
        }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string DisplayPrintedStatus(object pStatus)
    {
        if (pStatus.ToString().ToLower() == "false") { return Msg("Non-printed", "غير مطبوعة"); }
        else if (pStatus.ToString().ToLower() == "true") { return Msg("printed", "مطبوعة"); }
        else { return Msg("Non-printed", "غير مطبوعة"); }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string DisplayVisitorCategory(object pStatus)
    {
        switch (pStatus.ToString())
        {
            case "VP": return Msg("VIP", "كبار الزوار");
            case "OC": return Msg("Organizing Committee", "اللجنة التنظيمية");
            case "Se": return Msg("Services", "الخدمات");
            case "Ot": return Msg("Others", "أخرى");
            default: return "";
        }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string DisplayEmpType(object pStatus)
    {
        switch (pStatus.ToString())
        {
            case "Mng": return Msg("Manager", "مدير");
            case "Emp": return Msg("Employee", "موظف");
            case "Con": return Msg("Contractor", "متعاقد");
            default: return "";
        }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string DisplayReqStatus(object pStatus)
    {
        switch (pStatus.ToString())
        {
            case "0": return Msg("Waiting", "إنتظار");
            case "1": return Msg("Approved", "مقبولة");
            case "2": return Msg("rejected", "مرفوضة");
            case "3": return Msg("Cancelled", "ملغاة");
            default: return "";
        }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static void ShowMsg(Page pPage,string pMsgEn, string pMsgAr) 
    { 
        ScriptManager.RegisterStartupScript(pPage, pPage.GetType(), "key", "alert('" + General.Msg(pMsgEn,pMsgAr) + "');", true); 
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static void ShowMsg2(Page pPage,string pMsgEn, string pMsgAr) 
    { 
        pPage.RegisterClientScriptBlock("errMsg", "<script>alert('" + General.Msg(pMsgEn,pMsgAr) + "')</script>"); 
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static void ShowAdminMsg(Page pPage) 
    {
        //General.ShowMsg(this,
        //General.ShowAdminMsg(this); 
        string MsgEn = "Transaction failed to commit please contact your administrator";
        string MsgAr = "النظام غير قادر على حفظ البيانات, الرجاء الاتصال بمدير النظام";
        ScriptManager.RegisterStartupScript(pPage, pPage.GetType(), "key", "alert('" + General.Msg(MsgEn,MsgAr) + "');", true); 
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static void ShowAdminMsg2(Page pPage) 
    {
        string MsgEn = "Transaction failed to commit please contact your administrator";
        string MsgAr = "النظام غير قادر على حفظ البيانات, الرجاء الاتصال بمدير النظام";
        pPage.RegisterClientScriptBlock("errMsg", "<script>alert('" + General.Msg(MsgEn,MsgAr) + "')</script>");  
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string DisplayStatus(object pStatus)
    {
        switch (pStatus.ToString())
        {
            case "1": return Msg("Active", "فعال");
            case "0": return Msg("inActive", "غير فعال");
            default: return "";
        }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string DisplayGender(object pStatus)
    {
        switch (pStatus.ToString())
        {
            case "M": return Msg("Male", "ذكر");
            case "F": return Msg("Female", "أنثى");
            default: return "";
        }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string DisplayCollegeType(object pStatus)
    {
        switch (pStatus.ToString())
        {
            case "Col": return Msg("College", "كلية");
            case "Rec": return Msg("Rector", "عمادة");
            case "Mng": return Msg("General management", "إدارة عامة");
            default: return "";
        }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static void ValidMsg(Page pg, ref CustomValidator cv,bool SetErrMsg, string pMsgEn, string pMsgAr) 
    { 
        string Msg = General.Msg(pMsgEn, pMsgAr);
        if (SetErrMsg) { cv.ErrorMessage = Msg; } else { cv.ErrorMessage = ""; }
        cv.Text = pg.Server.HtmlDecode("&lt;img src='../Images/icon/Exclamation.gif' title='" + Msg + "' /&gt;");  
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static System.Drawing.Image byteArrayToImage(byte[] byteArrayIn)
    {
        MemoryStream ms = new MemoryStream(byteArrayIn);
        System.Drawing.Image returnImage = System.Drawing.Image.FromStream(ms);
        return returnImage;
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static byte[] imageToByteArray(System.Drawing.Image imageIn)
    {
        if (imageIn != null)
        {
            MemoryStream ms = new MemoryStream();
            imageIn.Save(ms, System.Drawing.Imaging.ImageFormat.Bmp);
            return ms.ToArray();
        }
        else
        {
            byte[] array1 = new byte[1];
            return array1;
        }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public string getAppLanguage()
    {
        DataTable LangDt = DBCs.FetchData(" SELECT AppLanguage FROM ApplicationSetup ");
        if (!DBCs.IsNullOrEmpty(LangDt)) { if (LangDt.Rows[0][0] != DBNull.Value) { return LangDt.Rows[0][0].ToString(); } }

        return "En";
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string getDir(string pLang) { if (pLang == "Ar") { return "rtl"; } else { return "ltr"; } }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string getCulture(string pLang) { if (pLang == "Ar") { return "ar-Sa"; } else { return "en-US"; } }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public static string DisplayAction(object pAction)
    {
        switch (pAction.ToString())
        {
            case "A": return Msg("ADD", "إضافة");
            case "U": return Msg("Update", "تعديل");
            case "P": return Msg("Print", "طباعة");
            default: return "";
        }
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    
}